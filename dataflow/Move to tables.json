{
	"name": "Move to tables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ikiData_fromIkiProductsWh",
						"type": "DatasetReference"
					},
					"name": "ikiData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "nutrition",
						"type": "DatasetReference"
					},
					"name": "nutrition"
				},
				{
					"dataset": {
						"referenceName": "prices",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ConvertingToDoubles"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          constraintcode as string,",
				"          countryoforigin as string,",
				"          supplier as string,",
				"          producer as string,",
				"          packaging as string,",
				"          name as string,",
				"          description as string,",
				"          ingredients as string,",
				"          storingconditions as string,",
				"          allergens as string,",
				"          energy as string,",
				"          fat as string,",
				"          salt as string,",
				"          protein as string,",
				"          carbs as string,",
				"          satfat as string,",
				"          sugar as string,",
				"          pricesale as double,",
				"          pricenosale as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT * from ikidata',",
				"     format: 'query') ~> ikiData",
				"ikiData derive(fat = toDouble(fat),",
				"          salt = toDouble(salt),",
				"          protein = toDouble(protein),",
				"          carbs = toDouble(carbs),",
				"          satfat = toDouble(satfat),",
				"          sugar = toDouble(sugar),",
				"          pricesale = toDouble(pricesale),",
				"          pricenosale = toDouble(pricenosale)) ~> ConvertingToDoubles",
				"ConvertingToDoubles sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          energy as string,",
				"          fat as double,",
				"          salt as double,",
				"          protein as double,",
				"          carbs as double,",
				"          satfat as double,",
				"          sugar as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     mapColumn(",
				"          energy,",
				"          fat,",
				"          salt,",
				"          protein,",
				"          carbs,",
				"          satfat,",
				"          sugar",
				"     )) ~> nutrition",
				"ConvertingToDoubles sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          price as double,",
				"          priceonsale as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     mapColumn(",
				"          price = pricenosale,",
				"          priceonsale = pricesale",
				"     )) ~> sink1"
			]
		}
	}
}